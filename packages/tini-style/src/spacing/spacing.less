@import '../variables.less';
@import '../mixins.less';

each(@spacingSizes, {
  @normalizeValue: replace(~"@{value}", ' ', '-');

  .spacex-@{normalizeValue} > * + * {
		--tf-space-x-reverse: 0;
		margin-right: calc(var(~"--space-inline-@{normalizeValue}") * var(--tf-space-x-reverse));
		margin-left: calc(var(~"--space-inline-@{normalizeValue}") * calc(1 - var(--tf-space-x-reverse)));
  }

  .spacey-@{normalizeValue} > * + * {
		--tf-space-y-reverse: 0;
		margin-top: calc(var(~"--space-stack-@{normalizeValue}") * calc(1 - var(--tf-space-y-reverse)));
		margin-bottom: calc(var(~"--space-stack-@{normalizeValue}") * var(--tf-space-y-reverse));
  }
});

.space-x-reverse > * + * {
  --tf-space-x-reverse: 1;
}

.space-y-reverse > * + * {
  --tf-space-y-reverse: 1;
}

.classify(@subject, @step) {
  .spacex-@{step}x > * + * {
    --tf-space-x-reverse: 0;
    margin-right: calc(var(~'--space-inline-@{step}x') * var(--tf-space-x-reverse));
    margin-left: calc(var(~'--space-inline-@{step}x') * calc(1 - var(--tf-space-x-reverse)));
  }

  .spacey-@{step}x > * + * {
    --tf-space-y-reverse: 0;
    margin-top: calc(var(~'--space-stack-@{step}x') * calc(1 - var(--tf-space-y-reverse)));
    margin-bottom: calc(var(~'--space-stack-@{step}x') * var(--tf-space-y-reverse));
  }
}

.loop(@steps: @spacingSteps);
